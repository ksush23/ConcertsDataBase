<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DSConcerts" targetNamespace="http://tempuri.org/DSConcerts.xsd" xmlns:mstns="http://tempuri.org/DSConcerts.xsd" xmlns="http://tempuri.org/DSConcerts.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QTAdapter" GeneratorFunctionsComponentClassName="QTAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QTAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="ConcertsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="ConcertsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ConcertsData.Properties.Settings.GlobalReference.Default.ConcertsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlacesTableAdapter" GeneratorDataComponentClassName="PlacesTableAdapter" Name="Places" UserDataComponentName="PlacesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Places" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Places] WHERE (([Place_ID] = @Original_Place_ID) AND ([Place_Name] = @Original_Place_Name) AND ([Place_Address] = @Original_Place_Address))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Place_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Place_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Place_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Place_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Place_Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Places] ([Place_ID], [Place_Name], [Place_Address]) VALUES (@Place_ID, @Place_Name, @Place_Address);
SELECT Place_ID, Place_Name, Place_Address FROM Places WHERE (Place_ID = @Place_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Place_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Place_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Place_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Place_Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Place_ID, Place_Name, Place_Address FROM dbo.Places</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Places] SET [Place_ID] = @Place_ID, [Place_Name] = @Place_Name, [Place_Address] = @Place_Address WHERE (([Place_ID] = @Original_Place_ID) AND ([Place_Name] = @Original_Place_Name) AND ([Place_Address] = @Original_Place_Address));
SELECT Place_ID, Place_Name, Place_Address FROM Places WHERE (Place_ID = @Place_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Place_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Place_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Place_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Place_Address" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Place_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Place_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Place_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Place_Address" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Place_Address" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Place_ID" DataSetColumn="Place_ID" />
              <Mapping SourceColumn="Place_Name" DataSetColumn="Place_Name" />
              <Mapping SourceColumn="Place_Address" DataSetColumn="Place_Address" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ConcertsTableAdapter" GeneratorDataComponentClassName="ConcertsTableAdapter" Name="Concerts" UserDataComponentName="ConcertsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Concerts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Concerts] WHERE (([Concert_ID] = @Original_Concert_ID) AND ((@IsNull_Concert_TimeDate = 1 AND [Concert_TimeDate] IS NULL) OR ([Concert_TimeDate] = @Original_Concert_TimeDate)) AND ([Concert_Artist_ID] = @Original_Concert_Artist_ID) AND ([Concert_Place_ID] = @Original_Concert_Place_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Concert_TimeDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Concert_TimeDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Place_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Concerts] ([Concert_ID], [Concert_TimeDate], [Concert_Artist_ID], [Concert_Place_ID]) VALUES (@Concert_ID, @Concert_TimeDate, @Concert_Artist_ID, @Concert_Place_ID);
SELECT Concert_ID, Concert_TimeDate, Concert_Artist_ID, Concert_Place_ID FROM Concerts WHERE (Concert_ID = @Concert_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Concert_TimeDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Concert_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Concert_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Concert_ID, Concert_TimeDate, Concert_Artist_ID, Concert_Place_ID FROM dbo.Concerts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Concerts] SET [Concert_ID] = @Concert_ID, [Concert_TimeDate] = @Concert_TimeDate, [Concert_Artist_ID] = @Concert_Artist_ID, [Concert_Place_ID] = @Concert_Place_ID WHERE (([Concert_ID] = @Original_Concert_ID) AND ((@IsNull_Concert_TimeDate = 1 AND [Concert_TimeDate] IS NULL) OR ([Concert_TimeDate] = @Original_Concert_TimeDate)) AND ([Concert_Artist_ID] = @Original_Concert_Artist_ID) AND ([Concert_Place_ID] = @Original_Concert_Place_ID));
SELECT Concert_ID, Concert_TimeDate, Concert_Artist_ID, Concert_Place_ID FROM Concerts WHERE (Concert_ID = @Concert_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Concert_TimeDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Concert_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Concert_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Concert_TimeDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Concert_TimeDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Place_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Concert_ID" DataSetColumn="Concert_ID" />
              <Mapping SourceColumn="Concert_TimeDate" DataSetColumn="Concert_TimeDate" />
              <Mapping SourceColumn="Concert_Artist_ID" DataSetColumn="Concert_Artist_ID" />
              <Mapping SourceColumn="Concert_Place_ID" DataSetColumn="Concert_Place_ID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SQCount_Concerts_Place_ID" Modifier="Public" Name="SQCount_Concerts_Place_ID" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="SQCount_Concerts_Place_ID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(Concerts.Concert_Place_ID) AS Expr1
FROM     Concerts INNER JOIN
                  Places ON Concerts.Concert_Place_ID = Places.Place_ID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ArtistsTableAdapter" GeneratorDataComponentClassName="ArtistsTableAdapter" Name="Artists" UserDataComponentName="ArtistsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Artists" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Artists] WHERE (([Artist_ID] = @Original_Artist_ID) AND ([Artist_Name] = @Original_Artist_Name) AND ([Artist_Genre] = @Original_Artist_Genre))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Artist_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Artist_Genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Artists] ([Artist_ID], [Artist_Name], [Artist_Genre]) VALUES (@Artist_ID, @Artist_Name, @Artist_Genre);
SELECT Artist_ID, Artist_Name, Artist_Genre FROM Artists WHERE (Artist_ID = @Artist_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Artist_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Artist_Genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Artist_ID, Artist_Name, Artist_Genre FROM dbo.Artists</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Artists] SET [Artist_ID] = @Artist_ID, [Artist_Name] = @Artist_Name, [Artist_Genre] = @Artist_Genre WHERE (([Artist_ID] = @Original_Artist_ID) AND ([Artist_Name] = @Original_Artist_Name) AND ([Artist_Genre] = @Original_Artist_Genre));
SELECT Artist_ID, Artist_Name, Artist_Genre FROM Artists WHERE (Artist_ID = @Artist_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Artist_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Artist_Genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Artist_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Artist_Genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Artist_ID" DataSetColumn="Artist_ID" />
              <Mapping SourceColumn="Artist_Name" DataSetColumn="Artist_Name" />
              <Mapping SourceColumn="Artist_Genre" DataSetColumn="Artist_Genre" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SeatsTableAdapter" GeneratorDataComponentClassName="SeatsTableAdapter" Name="Seats" UserDataComponentName="SeatsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Seats" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Seats] WHERE (([Seat_ID] = @Original_Seat_ID) AND ([Seat_Line_number] = @Original_Seat_Line_number) AND ([Seat_Number] = @Original_Seat_Number) AND ([Seat_Sector_ID] = @Original_Seat_Sector_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Seat_Line_number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seat_Line_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Seat_Number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seat_Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Seat_Sector_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat_Sector_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Seats] ([Seat_ID], [Seat_Line_number], [Seat_Number], [Seat_Sector_ID]) VALUES (@Seat_ID, @Seat_Line_number, @Seat_Number, @Seat_Sector_ID);
SELECT Seat_ID, Seat_Line_number, Seat_Number, Seat_Sector_ID FROM Seats WHERE (Seat_ID = @Seat_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Seat_Line_number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seat_Line_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Seat_Number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seat_Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Seat_Sector_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat_Sector_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Seat_ID, Seat_Line_number, Seat_Number, Seat_Sector_ID FROM dbo.Seats</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Seats] SET [Seat_ID] = @Seat_ID, [Seat_Line_number] = @Seat_Line_number, [Seat_Number] = @Seat_Number, [Seat_Sector_ID] = @Seat_Sector_ID WHERE (([Seat_ID] = @Original_Seat_ID) AND ([Seat_Line_number] = @Original_Seat_Line_number) AND ([Seat_Number] = @Original_Seat_Number) AND ([Seat_Sector_ID] = @Original_Seat_Sector_ID));
SELECT Seat_ID, Seat_Line_number, Seat_Number, Seat_Sector_ID FROM Seats WHERE (Seat_ID = @Seat_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Seat_Line_number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seat_Line_number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Seat_Number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seat_Number" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Seat_Sector_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat_Sector_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Seat_Line_number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seat_Line_number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Seat_Number" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Seat_Number" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Seat_Sector_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Seat_Sector_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Seat_ID" DataSetColumn="Seat_ID" />
              <Mapping SourceColumn="Seat_Line_number" DataSetColumn="Seat_Line_number" />
              <Mapping SourceColumn="Seat_Number" DataSetColumn="Seat_Number" />
              <Mapping SourceColumn="Seat_Sector_ID" DataSetColumn="Seat_Sector_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SectorsTableAdapter" GeneratorDataComponentClassName="SectorsTableAdapter" Name="Sectors" UserDataComponentName="SectorsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Sectors" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Sectors] WHERE (([Sector_ID] = @Original_Sector_ID) AND ([Sector_Name] = @Original_Sector_Name) AND ([Sector_Place_ID] = @Original_Sector_Place_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sector_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sector_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Sector_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Sector_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sector_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sector_Place_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Sectors] ([Sector_ID], [Sector_Name], [Sector_Place_ID]) VALUES (@Sector_ID, @Sector_Name, @Sector_Place_ID);
SELECT Sector_ID, Sector_Name, Sector_Place_ID FROM Sectors WHERE (Sector_ID = @Sector_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sector_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sector_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Sector_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Sector_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sector_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sector_Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Sector_ID, Sector_Name, Sector_Place_ID FROM dbo.Sectors</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Sectors] SET [Sector_ID] = @Sector_ID, [Sector_Name] = @Sector_Name, [Sector_Place_ID] = @Sector_Place_ID WHERE (([Sector_ID] = @Original_Sector_ID) AND ([Sector_Name] = @Original_Sector_Name) AND ([Sector_Place_ID] = @Original_Sector_Place_ID));
SELECT Sector_ID, Sector_Name, Sector_Place_ID FROM Sectors WHERE (Sector_ID = @Sector_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sector_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sector_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Sector_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Sector_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Sector_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sector_Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sector_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sector_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Sector_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Sector_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Sector_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sector_Place_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Sector_ID" DataSetColumn="Sector_ID" />
              <Mapping SourceColumn="Sector_Name" DataSetColumn="Sector_Name" />
              <Mapping SourceColumn="Sector_Place_ID" DataSetColumn="Sector_Place_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Ticket_StatesTableAdapter" GeneratorDataComponentClassName="Ticket_StatesTableAdapter" Name="Ticket_States" UserDataComponentName="Ticket_StatesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Ticket_States" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Ticket_States] WHERE (([State_ID] = @Original_State_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_State_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="State_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Ticket_States] ([State_ID], [Name]) VALUES (@State_ID, @Name);
SELECT State_ID, Name FROM Ticket_States WHERE (State_ID = @State_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@State_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="State_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT State_ID, Name FROM dbo.Ticket_States</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Ticket_States] SET [State_ID] = @State_ID, [Name] = @Name WHERE (([State_ID] = @Original_State_ID) AND ((@IsNull_Name = 1 AND [Name] IS NULL) OR ([Name] = @Original_Name)));
SELECT State_ID, Name FROM Ticket_States WHERE (State_ID = @State_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@State_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="State_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_State_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="State_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="State_ID" DataSetColumn="State_ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TicketsTableAdapter" GeneratorDataComponentClassName="TicketsTableAdapter" Name="Tickets" UserDataComponentName="TicketsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Tickets" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tickets] WHERE (([Ticket_ID] = @Original_Ticket_ID) AND ([Ticket_State_ID] = @Original_Ticket_State_ID) AND ((@IsNull_Ticket_Concert_ID = 1 AND [Ticket_Concert_ID] IS NULL) OR ([Ticket_Concert_ID] = @Original_Ticket_Concert_ID)) AND ((@IsNull_Ticket_Seat_ID = 1 AND [Ticket_Seat_ID] IS NULL) OR ([Ticket_Seat_ID] = @Original_Ticket_Seat_ID)) AND ((@IsNull_Ticket_Price = 1 AND [Ticket_Price] IS NULL) OR ([Ticket_Price] = @Original_Ticket_Price)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_State_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_State_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Ticket_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Concert_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Concert_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Ticket_Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Seat_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Seat_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Ticket_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Ticket_Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Ticket_Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tickets] ([Ticket_ID], [Ticket_State_ID], [Ticket_Concert_ID], [Ticket_Seat_ID], [Ticket_Price]) VALUES (@Ticket_ID, @Ticket_State_ID, @Ticket_Concert_ID, @Ticket_Seat_ID, @Ticket_Price);
SELECT Ticket_ID, Ticket_State_ID, Ticket_Concert_ID, Ticket_Seat_ID, Ticket_Price FROM Tickets WHERE (Ticket_ID = @Ticket_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Ticket_State_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_State_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Ticket_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Concert_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Ticket_Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Seat_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Ticket_Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Ticket_Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Ticket_ID, Ticket_State_ID, Ticket_Concert_ID, Ticket_Seat_ID, Ticket_Price FROM dbo.Tickets</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tickets] SET [Ticket_ID] = @Ticket_ID, [Ticket_State_ID] = @Ticket_State_ID, [Ticket_Concert_ID] = @Ticket_Concert_ID, [Ticket_Seat_ID] = @Ticket_Seat_ID, [Ticket_Price] = @Ticket_Price WHERE (([Ticket_ID] = @Original_Ticket_ID) AND ([Ticket_State_ID] = @Original_Ticket_State_ID) AND ((@IsNull_Ticket_Concert_ID = 1 AND [Ticket_Concert_ID] IS NULL) OR ([Ticket_Concert_ID] = @Original_Ticket_Concert_ID)) AND ((@IsNull_Ticket_Seat_ID = 1 AND [Ticket_Seat_ID] IS NULL) OR ([Ticket_Seat_ID] = @Original_Ticket_Seat_ID)) AND ((@IsNull_Ticket_Price = 1 AND [Ticket_Price] IS NULL) OR ([Ticket_Price] = @Original_Ticket_Price)));
SELECT Ticket_ID, Ticket_State_ID, Ticket_Concert_ID, Ticket_Seat_ID, Ticket_Price FROM Tickets WHERE (Ticket_ID = @Ticket_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Ticket_State_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_State_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Ticket_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Concert_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Ticket_Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Seat_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Ticket_Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Ticket_Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_State_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_State_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Ticket_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Concert_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Concert_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Ticket_Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Seat_ID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Ticket_Seat_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Seat_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Ticket_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Ticket_Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Ticket_Price" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Ticket_Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Ticket_ID" DataSetColumn="Ticket_ID" />
              <Mapping SourceColumn="Ticket_State_ID" DataSetColumn="Ticket_State_ID" />
              <Mapping SourceColumn="Ticket_Concert_ID" DataSetColumn="Ticket_Concert_ID" />
              <Mapping SourceColumn="Ticket_Seat_ID" DataSetColumn="Ticket_Seat_ID" />
              <Mapping SourceColumn="Ticket_Price" DataSetColumn="Ticket_Price" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ArtistsByCategoryTableAdapter" GeneratorDataComponentClassName="ArtistsByCategoryTableAdapter" Name="ArtistsByCategory" UserDataComponentName="ArtistsByCategoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByName" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetDataByName" GeneratorSourceName="FillByName" GetMethodModifier="Public" GetMethodName="GetDataByName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetDataByName" UserSourceName="FillByName">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [dbo].[Artists] WHERE ([Artist_ID] = @Original_Artist_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_Artist_ID" ColumnName="Artist_ID" DataSourceName="Concerts.dbo.Artists" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[Artists] ([Artist_ID], [Artist_Name], [Artist_Genre]) VALUES (@Artist_ID, @Artist_Name, @Artist_Genre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Artist_ID" ColumnName="Artist_ID" DataSourceName="Concerts.dbo.Artists" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Artist_Name" ColumnName="Artist_Name" DataSourceName="Concerts.dbo.Artists" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Artist_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Artist_Genre" ColumnName="Artist_Genre" DataSourceName="Concerts.dbo.Artists" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@Artist_Genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Artists.*, Concerts.*
FROM Artists INNER JOIN Concerts
on Artist_ID = Concert_Artist_ID
WHERE (Concert_Artist_ID = @id AND Artist_Name LIKE @name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Concert_Artist_ID" DataSourceName="Concerts.dbo.Concerts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name" ColumnName="Artist_Name" DataSourceName="Concerts.dbo.Artists" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE ARTISTSSET Artist_Name = @Artist_Name, Artist_Genre = @Artist_Genre (Artist_ID = @Original_Artist_ID)</CommandText>
                    <Parameters />
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Artist_ID" DataSetColumn="Artist_ID" />
              <Mapping SourceColumn="Artist_Name" DataSetColumn="Artist_Name" />
              <Mapping SourceColumn="Artist_Genre" DataSetColumn="Artist_Genre" />
              <Mapping SourceColumn="Concert_ID" DataSetColumn="Concert_ID" />
              <Mapping SourceColumn="Concert_TimeDate" DataSetColumn="Concert_TimeDate" />
              <Mapping SourceColumn="Concert_Artist_ID" DataSetColumn="Concert_Artist_ID" />
              <Mapping SourceColumn="Concert_Place_ID" DataSetColumn="Concert_Place_ID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Artists.*, Concerts.*
FROM Artists INNER JOIN Concerts
on Artist_ID = Concert_Artist_ID
WHERE (Concert_Artist_ID = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Concert_Artist_ID" DataSourceName="Concerts.dbo.Concerts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Artists" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByArtistGenre" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByArtistGenre" GeneratorSourceName="FillByArtistGenre" GetMethodModifier="Public" GetMethodName="GetDataByArtistGenre" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByArtistGenre" UserSourceName="FillByArtistGenre">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Artists.*
FROM Artists 
WHERE (Artist_ID = @id AND Artist_Genre LIKE @genre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Artist_ID" DataSourceName="Concerts.dbo.Artists" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="genre" ColumnName="Artist_Genre" DataSourceName="Concerts.dbo.Artists" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Artists" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByArtistName" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByArtistName" GeneratorSourceName="FillByArtistName" GetMethodModifier="Public" GetMethodName="GetDataByArtistName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByArtistName" UserSourceName="FillByArtistName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Artists.*
FROM Artists
WHERE (Artist_ID = @id AND Artist_Name LIKE @name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Artist_ID" DataSourceName="Concerts.dbo.Artists" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name" ColumnName="Artist_Name" DataSourceName="Concerts.dbo.Artists" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Artists" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByNameGenre" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByNameGenre" GeneratorSourceName="FillByNameGenre" GetMethodModifier="Public" GetMethodName="GetDataByNameGenre" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByNameGenre" UserSourceName="FillByNameGenre">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Artists.*
FROM Artists
WHERE (Artist_ID = @id AND Artist_Name LIKE @name AND Artist_Genre LIKE @genre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Artist_ID" DataSourceName="Concerts.dbo.Artists" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name" ColumnName="Artist_Name" DataSourceName="Concerts.dbo.Artists" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="genre" ColumnName="Artist_Genre" DataSourceName="Concerts.dbo.Artists" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ArtistsByGenreTableAdapter" GeneratorDataComponentClassName="ArtistsByGenreTableAdapter" Name="ArtistsByGenre" UserDataComponentName="ArtistsByGenreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Artists" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillGenre" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByGenre" GeneratorSourceName="FillGenre" GetMethodModifier="Public" GetMethodName="GetDataByGenre" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByGenre" UserSourceName="FillGenre">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Artists] WHERE (([Artist_ID] = @Original_Artist_ID) AND ([Artist_Name] = @Original_Artist_Name) AND ([Artist_Genre] = @Original_Artist_Genre))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Artist_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Artist_Genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Artists] ([Artist_ID], [Artist_Name], [Artist_Genre]) VALUES (@Artist_ID, @Artist_Name, @Artist_Genre);
SELECT Artist_ID, Artist_Name, Artist_Genre FROM Artists WHERE (Artist_ID = @Artist_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Artist_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Artist_Genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Artists.*
FROM Artists
WHERE (Artist_ID = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Artist_ID" DataSourceName="Concerts.dbo.Artists" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Artists] SET [Artist_ID] = @Artist_ID, [Artist_Name] = @Artist_Name, [Artist_Genre] = @Artist_Genre WHERE (([Artist_ID] = @Original_Artist_ID) AND ([Artist_Name] = @Original_Artist_Name) AND ([Artist_Genre] = @Original_Artist_Genre));
SELECT Artist_ID, Artist_Name, Artist_Genre FROM Artists WHERE (Artist_ID = @Artist_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Artist_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Artist_Genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Artist_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Artist_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Artist_Genre" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Artist_Genre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Artist_ID" DataSetColumn="Artist_ID" />
              <Mapping SourceColumn="Artist_Name" DataSetColumn="Artist_Name" />
              <Mapping SourceColumn="Artist_Genre" DataSetColumn="Artist_Genre" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="NotConcertsTableAdapter" GeneratorDataComponentClassName="NotConcertsTableAdapter" Name="NotConcerts" UserDataComponentName="NotConcertsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectName="Concerts.dbo.Concerts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Concerts] WHERE (([Concert_ID] = @Original_Concert_ID) AND ((@IsNull_Concert_TimeDate = 1 AND [Concert_TimeDate] IS NULL) OR ([Concert_TimeDate] = @Original_Concert_TimeDate)) AND ([Concert_Artist_ID] = @Original_Concert_Artist_ID) AND ([Concert_Place_ID] = @Original_Concert_Place_ID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Concert_TimeDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Concert_TimeDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Place_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [Concerts] ([Concert_ID], [Concert_TimeDate], [Concert_Artist_ID], [Concert_Place_ID]) VALUES (@id, @Concert_TimeDate, @Concert_Artist_ID, @Concert_Place_ID);
SELECT Concert_ID, Concert_TimeDate, Concert_Artist_ID, Concert_Place_ID FROM Concerts WHERE (Concert_ID = @Concert_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Concert_ID" DataSourceName="Concerts.dbo.Concerts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Concert_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Concert_TimeDate" ColumnName="Concert_TimeDate" DataSourceName="Concerts.dbo.Concerts" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Concert_TimeDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Concert_Artist_ID" ColumnName="Concert_Artist_ID" DataSourceName="Concerts.dbo.Concerts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Concert_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Concert_Place_ID" ColumnName="Concert_Place_ID" DataSourceName="Concerts.dbo.Concerts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Concert_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Concert_Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Concert_ID" ColumnName="Concert_ID" DataSourceName="Concerts.dbo.Concerts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Concert_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Concerts.*
FROM Concerts
WHERE Concert_Artist_ID NOT IN
(SELECT Artist_ID FROM Artists WHERE (Artist_ID = @id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Concerts] SET [Concert_ID] = @Concert_ID, [Concert_TimeDate] = @Concert_TimeDate, [Concert_Artist_ID] = @Concert_Artist_ID, [Concert_Place_ID] = @Concert_Place_ID WHERE (([Concert_ID] = @Original_Concert_ID) AND ((@IsNull_Concert_TimeDate = 1 AND [Concert_TimeDate] IS NULL) OR ([Concert_TimeDate] = @Original_Concert_TimeDate)) AND ([Concert_Artist_ID] = @Original_Concert_Artist_ID) AND ([Concert_Place_ID] = @Original_Concert_Place_ID));
SELECT Concert_ID, Concert_TimeDate, Concert_Artist_ID, Concert_Place_ID FROM Concerts WHERE (Concert_ID = @Concert_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Concert_TimeDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Concert_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Concert_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Concert_TimeDate" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Concert_TimeDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Concert_TimeDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_Artist_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Concert_Place_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Concert_Place_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Concert_ID" DataSetColumn="Concert_ID" />
              <Mapping SourceColumn="Concert_TimeDate" DataSetColumn="Concert_TimeDate" />
              <Mapping SourceColumn="Concert_Artist_ID" DataSetColumn="Concert_Artist_ID" />
              <Mapping SourceColumn="Concert_Place_ID" DataSetColumn="Concert_Place_ID" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SQ_Concerts_Places_ID_Count" MethodsParameterType="CLR" Modifier="Public" Name="SQ_Concerts_Places_ID_Count" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="SQ_Concerts_Places_ID_Count">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(Concerts.Concert_Place_ID)
FROM     Concerts
WHERE Concerts.Concert_Place_ID = @id</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Concert_Place_ID" DataSourceName="Concerts.dbo.Concerts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Concert_Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SQ_Count_Concert_Artist_ID" MethodsParameterType="CLR" Modifier="Public" Name="SQ_Count_Concert_Artist_ID" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="SQ_Count_Concert_Artist_ID">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(Concerts.Concert_Artist_ID)
FROM     Concerts
WHERE Concerts.Concert_Artist_ID = @id</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Concert_Artist_ID" DataSourceName="Concerts.dbo.Concerts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Concert_Artist_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SQ_Count_Ticket_Concert_ID" MethodsParameterType="CLR" Modifier="Public" Name="SQ_Count_Ticket_Concert_ID" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="SQ_Count_Ticket_Concert_ID">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(Tickets.Ticket_Concert_ID)
FROM    Tickets
WHERE Tickets.Ticket_Concert_ID = @id</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="id" ColumnName="Ticket_Concert_ID" DataSourceName="Concerts.dbo.Tickets" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Ticket_Concert_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SQ_Count_Ticket_Seat_ID" MethodsParameterType="CLR" Modifier="Public" Name="SQ_Count_Ticket_Seat_ID" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="SQ_Count_Ticket_Seat_ID">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(Tickets.Ticket_Seat_ID)
FROM    Tickets
WHERE Tickets.Ticket_Seat_ID = @id</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="id" ColumnName="Ticket_Seat_ID" DataSourceName="Concerts.dbo.Tickets" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Ticket_Seat_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SQ_Count_Sector_Place_ID" MethodsParameterType="CLR" Modifier="Public" Name="SQ_Count_Sector_Place_ID" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="SQ_Count_Sector_Place_ID">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(Sectors.Sector_Place_ID)
FROM     Sectors
WHERE Sectors.Sector_Place_ID = @id</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Sector_Place_ID" DataSourceName="Concerts.dbo.Sectors" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Sector_Place_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="ConcertsConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SQ_Count_Seat_Sector_ID" MethodsParameterType="CLR" Modifier="Public" Name="SQ_Count_Seat_Sector_ID" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="SQ_Count_Seat_Sector_ID">
            <SelectCommand>
              <DbCommand CommandType="Text" ModifiedByUser="true">
                <CommandText>SELECT COUNT(Seats.Seat_Sector_ID)
FROM    Seats
WHERE Seats.Seat_Sector_ID = @id</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="Seat_Sector_ID" DataSourceName="Concerts.dbo.Seats" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Seat_Sector_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DSConcerts" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DSConcerts" msprop:Generator_UserDSName="DSConcerts">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Places" msprop:Generator_TableClassName="PlacesDataTable" msprop:Generator_TableVarName="tablePlaces" msprop:Generator_TablePropName="Places" msprop:Generator_RowDeletingName="PlacesRowDeleting" msprop:Generator_RowChangingName="PlacesRowChanging" msprop:Generator_RowEvHandlerName="PlacesRowChangeEventHandler" msprop:Generator_RowDeletedName="PlacesRowDeleted" msprop:Generator_UserTableName="Places" msprop:Generator_RowChangedName="PlacesRowChanged" msprop:Generator_RowEvArgName="PlacesRowChangeEvent" msprop:Generator_RowClassName="PlacesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Place_ID" msprop:Generator_ColumnVarNameInTable="columnPlace_ID" msprop:Generator_ColumnPropNameInRow="Place_ID" msprop:Generator_ColumnPropNameInTable="Place_IDColumn" msprop:Generator_UserColumnName="Place_ID" type="xs:int" />
              <xs:element name="Place_Name" msprop:Generator_ColumnVarNameInTable="columnPlace_Name" msprop:Generator_ColumnPropNameInRow="Place_Name" msprop:Generator_ColumnPropNameInTable="Place_NameColumn" msprop:Generator_UserColumnName="Place_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Place_Address" msprop:Generator_ColumnVarNameInTable="columnPlace_Address" msprop:Generator_ColumnPropNameInRow="Place_Address" msprop:Generator_ColumnPropNameInTable="Place_AddressColumn" msprop:Generator_UserColumnName="Place_Address">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Concerts" msprop:Generator_TableClassName="ConcertsDataTable" msprop:Generator_TableVarName="tableConcerts" msprop:Generator_TablePropName="Concerts" msprop:Generator_RowDeletingName="ConcertsRowDeleting" msprop:Generator_RowChangingName="ConcertsRowChanging" msprop:Generator_RowEvHandlerName="ConcertsRowChangeEventHandler" msprop:Generator_RowDeletedName="ConcertsRowDeleted" msprop:Generator_UserTableName="Concerts" msprop:Generator_RowChangedName="ConcertsRowChanged" msprop:Generator_RowEvArgName="ConcertsRowChangeEvent" msprop:Generator_RowClassName="ConcertsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Concert_ID" msprop:Generator_ColumnVarNameInTable="columnConcert_ID" msprop:Generator_ColumnPropNameInRow="Concert_ID" msprop:Generator_ColumnPropNameInTable="Concert_IDColumn" msprop:Generator_UserColumnName="Concert_ID" type="xs:int" />
              <xs:element name="Concert_TimeDate" msprop:Generator_ColumnVarNameInTable="columnConcert_TimeDate" msprop:Generator_ColumnPropNameInRow="Concert_TimeDate" msprop:Generator_ColumnPropNameInTable="Concert_TimeDateColumn" msprop:Generator_UserColumnName="Concert_TimeDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Concert_Artist_ID" msprop:Generator_ColumnVarNameInTable="columnConcert_Artist_ID" msprop:Generator_ColumnPropNameInRow="Concert_Artist_ID" msprop:Generator_ColumnPropNameInTable="Concert_Artist_IDColumn" msprop:Generator_UserColumnName="Concert_Artist_ID" type="xs:int" />
              <xs:element name="Concert_Place_ID" msprop:Generator_ColumnVarNameInTable="columnConcert_Place_ID" msprop:Generator_ColumnPropNameInRow="Concert_Place_ID" msprop:Generator_ColumnPropNameInTable="Concert_Place_IDColumn" msprop:Generator_UserColumnName="Concert_Place_ID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Artists" msprop:Generator_TableClassName="ArtistsDataTable" msprop:Generator_TableVarName="tableArtists" msprop:Generator_TablePropName="Artists" msprop:Generator_RowDeletingName="ArtistsRowDeleting" msprop:Generator_RowChangingName="ArtistsRowChanging" msprop:Generator_RowEvHandlerName="ArtistsRowChangeEventHandler" msprop:Generator_RowDeletedName="ArtistsRowDeleted" msprop:Generator_UserTableName="Artists" msprop:Generator_RowChangedName="ArtistsRowChanged" msprop:Generator_RowEvArgName="ArtistsRowChangeEvent" msprop:Generator_RowClassName="ArtistsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Artist_ID" msprop:Generator_ColumnVarNameInTable="columnArtist_ID" msprop:Generator_ColumnPropNameInRow="Artist_ID" msprop:Generator_ColumnPropNameInTable="Artist_IDColumn" msprop:Generator_UserColumnName="Artist_ID" type="xs:int" />
              <xs:element name="Artist_Name" msprop:Generator_ColumnVarNameInTable="columnArtist_Name" msprop:Generator_ColumnPropNameInRow="Artist_Name" msprop:Generator_ColumnPropNameInTable="Artist_NameColumn" msprop:Generator_UserColumnName="Artist_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Artist_Genre" msprop:Generator_ColumnVarNameInTable="columnArtist_Genre" msprop:Generator_ColumnPropNameInRow="Artist_Genre" msprop:Generator_ColumnPropNameInTable="Artist_GenreColumn" msprop:Generator_UserColumnName="Artist_Genre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Seats" msprop:Generator_TableClassName="SeatsDataTable" msprop:Generator_TableVarName="tableSeats" msprop:Generator_TablePropName="Seats" msprop:Generator_RowDeletingName="SeatsRowDeleting" msprop:Generator_RowChangingName="SeatsRowChanging" msprop:Generator_RowEvHandlerName="SeatsRowChangeEventHandler" msprop:Generator_RowDeletedName="SeatsRowDeleted" msprop:Generator_UserTableName="Seats" msprop:Generator_RowChangedName="SeatsRowChanged" msprop:Generator_RowEvArgName="SeatsRowChangeEvent" msprop:Generator_RowClassName="SeatsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Seat_ID" msprop:Generator_ColumnVarNameInTable="columnSeat_ID" msprop:Generator_ColumnPropNameInRow="Seat_ID" msprop:Generator_ColumnPropNameInTable="Seat_IDColumn" msprop:Generator_UserColumnName="Seat_ID" type="xs:int" />
              <xs:element name="Seat_Line_number" msprop:Generator_ColumnVarNameInTable="columnSeat_Line_number" msprop:Generator_ColumnPropNameInRow="Seat_Line_number" msprop:Generator_ColumnPropNameInTable="Seat_Line_numberColumn" msprop:Generator_UserColumnName="Seat_Line_number">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Seat_Number" msprop:Generator_ColumnVarNameInTable="columnSeat_Number" msprop:Generator_ColumnPropNameInRow="Seat_Number" msprop:Generator_ColumnPropNameInTable="Seat_NumberColumn" msprop:Generator_UserColumnName="Seat_Number">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Seat_Sector_ID" msprop:Generator_ColumnVarNameInTable="columnSeat_Sector_ID" msprop:Generator_ColumnPropNameInRow="Seat_Sector_ID" msprop:Generator_ColumnPropNameInTable="Seat_Sector_IDColumn" msprop:Generator_UserColumnName="Seat_Sector_ID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Sectors" msprop:Generator_TableClassName="SectorsDataTable" msprop:Generator_TableVarName="tableSectors" msprop:Generator_TablePropName="Sectors" msprop:Generator_RowDeletingName="SectorsRowDeleting" msprop:Generator_RowChangingName="SectorsRowChanging" msprop:Generator_RowEvHandlerName="SectorsRowChangeEventHandler" msprop:Generator_RowDeletedName="SectorsRowDeleted" msprop:Generator_UserTableName="Sectors" msprop:Generator_RowChangedName="SectorsRowChanged" msprop:Generator_RowEvArgName="SectorsRowChangeEvent" msprop:Generator_RowClassName="SectorsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Sector_ID" msprop:Generator_ColumnVarNameInTable="columnSector_ID" msprop:Generator_ColumnPropNameInRow="Sector_ID" msprop:Generator_ColumnPropNameInTable="Sector_IDColumn" msprop:Generator_UserColumnName="Sector_ID" type="xs:int" />
              <xs:element name="Sector_Name" msprop:Generator_ColumnVarNameInTable="columnSector_Name" msprop:Generator_ColumnPropNameInRow="Sector_Name" msprop:Generator_ColumnPropNameInTable="Sector_NameColumn" msprop:Generator_UserColumnName="Sector_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Sector_Place_ID" msprop:Generator_ColumnVarNameInTable="columnSector_Place_ID" msprop:Generator_ColumnPropNameInRow="Sector_Place_ID" msprop:Generator_ColumnPropNameInTable="Sector_Place_IDColumn" msprop:Generator_UserColumnName="Sector_Place_ID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Ticket_States" msprop:Generator_TableClassName="Ticket_StatesDataTable" msprop:Generator_TableVarName="tableTicket_States" msprop:Generator_TablePropName="Ticket_States" msprop:Generator_RowDeletingName="Ticket_StatesRowDeleting" msprop:Generator_RowChangingName="Ticket_StatesRowChanging" msprop:Generator_RowEvHandlerName="Ticket_StatesRowChangeEventHandler" msprop:Generator_RowDeletedName="Ticket_StatesRowDeleted" msprop:Generator_UserTableName="Ticket_States" msprop:Generator_RowChangedName="Ticket_StatesRowChanged" msprop:Generator_RowEvArgName="Ticket_StatesRowChangeEvent" msprop:Generator_RowClassName="Ticket_StatesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="State_ID" msprop:Generator_ColumnVarNameInTable="columnState_ID" msprop:Generator_ColumnPropNameInRow="State_ID" msprop:Generator_ColumnPropNameInTable="State_IDColumn" msprop:Generator_UserColumnName="State_ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tickets" msprop:Generator_TableClassName="TicketsDataTable" msprop:Generator_TableVarName="tableTickets" msprop:Generator_TablePropName="Tickets" msprop:Generator_RowDeletingName="TicketsRowDeleting" msprop:Generator_RowChangingName="TicketsRowChanging" msprop:Generator_RowEvHandlerName="TicketsRowChangeEventHandler" msprop:Generator_RowDeletedName="TicketsRowDeleted" msprop:Generator_UserTableName="Tickets" msprop:Generator_RowChangedName="TicketsRowChanged" msprop:Generator_RowEvArgName="TicketsRowChangeEvent" msprop:Generator_RowClassName="TicketsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Ticket_ID" msprop:Generator_ColumnVarNameInTable="columnTicket_ID" msprop:Generator_ColumnPropNameInRow="Ticket_ID" msprop:Generator_ColumnPropNameInTable="Ticket_IDColumn" msprop:Generator_UserColumnName="Ticket_ID" type="xs:int" />
              <xs:element name="Ticket_State_ID" msprop:Generator_ColumnVarNameInTable="columnTicket_State_ID" msprop:Generator_ColumnPropNameInRow="Ticket_State_ID" msprop:Generator_ColumnPropNameInTable="Ticket_State_IDColumn" msprop:Generator_UserColumnName="Ticket_State_ID" type="xs:int" />
              <xs:element name="Ticket_Concert_ID" msprop:Generator_ColumnVarNameInTable="columnTicket_Concert_ID" msprop:Generator_ColumnPropNameInRow="Ticket_Concert_ID" msprop:Generator_ColumnPropNameInTable="Ticket_Concert_IDColumn" msprop:Generator_UserColumnName="Ticket_Concert_ID" type="xs:int" minOccurs="0" />
              <xs:element name="Ticket_Seat_ID" msprop:Generator_ColumnVarNameInTable="columnTicket_Seat_ID" msprop:Generator_ColumnPropNameInRow="Ticket_Seat_ID" msprop:Generator_ColumnPropNameInTable="Ticket_Seat_IDColumn" msprop:Generator_UserColumnName="Ticket_Seat_ID" type="xs:int" minOccurs="0" />
              <xs:element name="Ticket_Price" msprop:Generator_ColumnVarNameInTable="columnTicket_Price" msprop:Generator_ColumnPropNameInRow="Ticket_Price" msprop:Generator_ColumnPropNameInTable="Ticket_PriceColumn" msprop:Generator_UserColumnName="Ticket_Price" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ArtistsByCategory" msprop:Generator_TableClassName="ArtistsByCategoryDataTable" msprop:Generator_TableVarName="tableArtistsByCategory" msprop:Generator_TablePropName="ArtistsByCategory" msprop:Generator_RowDeletingName="ArtistsByCategoryRowDeleting" msprop:Generator_RowChangingName="ArtistsByCategoryRowChanging" msprop:Generator_RowEvHandlerName="ArtistsByCategoryRowChangeEventHandler" msprop:Generator_RowDeletedName="ArtistsByCategoryRowDeleted" msprop:Generator_UserTableName="ArtistsByCategory" msprop:Generator_RowChangedName="ArtistsByCategoryRowChanged" msprop:Generator_RowEvArgName="ArtistsByCategoryRowChangeEvent" msprop:Generator_RowClassName="ArtistsByCategoryRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Artist_ID" msprop:Generator_ColumnVarNameInTable="columnArtist_ID" msprop:Generator_ColumnPropNameInRow="Artist_ID" msprop:Generator_ColumnPropNameInTable="Artist_IDColumn" msprop:Generator_UserColumnName="Artist_ID" type="xs:int" />
              <xs:element name="Artist_Name" msprop:Generator_ColumnVarNameInTable="columnArtist_Name" msprop:Generator_ColumnPropNameInRow="Artist_Name" msprop:Generator_ColumnPropNameInTable="Artist_NameColumn" msprop:Generator_UserColumnName="Artist_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Artist_Genre" msprop:Generator_ColumnVarNameInTable="columnArtist_Genre" msprop:Generator_ColumnPropNameInRow="Artist_Genre" msprop:Generator_ColumnPropNameInTable="Artist_GenreColumn" msprop:Generator_UserColumnName="Artist_Genre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Concert_ID" msprop:Generator_ColumnVarNameInTable="columnConcert_ID" msprop:Generator_ColumnPropNameInRow="Concert_ID" msprop:Generator_ColumnPropNameInTable="Concert_IDColumn" msprop:Generator_UserColumnName="Concert_ID" type="xs:int" />
              <xs:element name="Concert_TimeDate" msprop:Generator_ColumnVarNameInTable="columnConcert_TimeDate" msprop:Generator_ColumnPropNameInRow="Concert_TimeDate" msprop:Generator_ColumnPropNameInTable="Concert_TimeDateColumn" msprop:Generator_UserColumnName="Concert_TimeDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Concert_Artist_ID" msprop:Generator_ColumnVarNameInTable="columnConcert_Artist_ID" msprop:Generator_ColumnPropNameInRow="Concert_Artist_ID" msprop:Generator_ColumnPropNameInTable="Concert_Artist_IDColumn" msprop:Generator_UserColumnName="Concert_Artist_ID" type="xs:int" />
              <xs:element name="Concert_Place_ID" msprop:Generator_ColumnVarNameInTable="columnConcert_Place_ID" msprop:Generator_ColumnPropNameInRow="Concert_Place_ID" msprop:Generator_ColumnPropNameInTable="Concert_Place_IDColumn" msprop:Generator_UserColumnName="Concert_Place_ID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ArtistsByGenre" msprop:Generator_TableClassName="ArtistsByGenreDataTable" msprop:Generator_TableVarName="tableArtistsByGenre" msprop:Generator_RowChangedName="ArtistsByGenreRowChanged" msprop:Generator_TablePropName="ArtistsByGenre" msprop:Generator_RowDeletingName="ArtistsByGenreRowDeleting" msprop:Generator_RowChangingName="ArtistsByGenreRowChanging" msprop:Generator_RowEvHandlerName="ArtistsByGenreRowChangeEventHandler" msprop:Generator_RowDeletedName="ArtistsByGenreRowDeleted" msprop:Generator_RowClassName="ArtistsByGenreRow" msprop:Generator_UserTableName="ArtistsByGenre" msprop:Generator_RowEvArgName="ArtistsByGenreRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Artist_ID" msprop:Generator_ColumnVarNameInTable="columnArtist_ID" msprop:Generator_ColumnPropNameInRow="Artist_ID" msprop:Generator_ColumnPropNameInTable="Artist_IDColumn" msprop:Generator_UserColumnName="Artist_ID" type="xs:int" />
              <xs:element name="Artist_Name" msprop:Generator_ColumnVarNameInTable="columnArtist_Name" msprop:Generator_ColumnPropNameInRow="Artist_Name" msprop:Generator_ColumnPropNameInTable="Artist_NameColumn" msprop:Generator_UserColumnName="Artist_Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Artist_Genre" msprop:Generator_ColumnVarNameInTable="columnArtist_Genre" msprop:Generator_ColumnPropNameInRow="Artist_Genre" msprop:Generator_ColumnPropNameInTable="Artist_GenreColumn" msprop:Generator_UserColumnName="Artist_Genre">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="NotConcerts" msprop:Generator_TableClassName="NotConcertsDataTable" msprop:Generator_TableVarName="tableNotConcerts" msprop:Generator_RowChangedName="NotConcertsRowChanged" msprop:Generator_TablePropName="NotConcerts" msprop:Generator_RowDeletingName="NotConcertsRowDeleting" msprop:Generator_RowChangingName="NotConcertsRowChanging" msprop:Generator_RowEvHandlerName="NotConcertsRowChangeEventHandler" msprop:Generator_RowDeletedName="NotConcertsRowDeleted" msprop:Generator_RowClassName="NotConcertsRow" msprop:Generator_UserTableName="NotConcerts" msprop:Generator_RowEvArgName="NotConcertsRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Concert_ID" msprop:Generator_ColumnVarNameInTable="columnConcert_ID" msprop:Generator_ColumnPropNameInRow="Concert_ID" msprop:Generator_ColumnPropNameInTable="Concert_IDColumn" msprop:Generator_UserColumnName="Concert_ID" type="xs:int" />
              <xs:element name="Concert_TimeDate" msprop:Generator_ColumnVarNameInTable="columnConcert_TimeDate" msprop:Generator_ColumnPropNameInRow="Concert_TimeDate" msprop:Generator_ColumnPropNameInTable="Concert_TimeDateColumn" msprop:Generator_UserColumnName="Concert_TimeDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Concert_Artist_ID" msprop:Generator_ColumnVarNameInTable="columnConcert_Artist_ID" msprop:Generator_ColumnPropNameInRow="Concert_Artist_ID" msprop:Generator_ColumnPropNameInTable="Concert_Artist_IDColumn" msprop:Generator_UserColumnName="Concert_Artist_ID" type="xs:int" />
              <xs:element name="Concert_Place_ID" msprop:Generator_ColumnVarNameInTable="columnConcert_Place_ID" msprop:Generator_ColumnPropNameInRow="Concert_Place_ID" msprop:Generator_ColumnPropNameInTable="Concert_Place_IDColumn" msprop:Generator_UserColumnName="Concert_Place_ID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Places" />
      <xs:field xpath="mstns:Place_ID" />
    </xs:unique>
    <xs:unique name="Concerts_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Concerts" />
      <xs:field xpath="mstns:Concert_ID" />
    </xs:unique>
    <xs:unique name="Artists_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Artists" />
      <xs:field xpath="mstns:Artist_ID" />
    </xs:unique>
    <xs:unique name="Seats_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Seats" />
      <xs:field xpath="mstns:Seat_ID" />
    </xs:unique>
    <xs:unique name="Sectors_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Sectors" />
      <xs:field xpath="mstns:Sector_ID" />
    </xs:unique>
    <xs:unique name="Ticket_States_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Ticket_States" />
      <xs:field xpath="mstns:State_ID" />
    </xs:unique>
    <xs:unique name="Tickets_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tickets" />
      <xs:field xpath="mstns:Ticket_ID" />
    </xs:unique>
    <xs:unique name="ArtistsByCategory_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ArtistsByCategory" />
      <xs:field xpath="mstns:Artist_ID" />
      <xs:field xpath="mstns:Concert_ID" />
    </xs:unique>
    <xs:unique name="ArtistsByGenre_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ArtistsByGenre" />
      <xs:field xpath="mstns:Artist_ID" />
    </xs:unique>
    <xs:unique name="NotConcerts_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:NotConcerts" />
      <xs:field xpath="mstns:Concert_ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Concerts_Places" msdata:parent="Places" msdata:child="Concerts" msdata:parentkey="Place_ID" msdata:childkey="Concert_Place_ID" msprop:Generator_UserChildTable="Concerts" msprop:Generator_ChildPropName="GetConcertsRows" msprop:Generator_UserRelationName="FK_Concerts_Places" msprop:Generator_ParentPropName="PlacesRow" msprop:Generator_RelationVarName="relationFK_Concerts_Places" msprop:Generator_UserParentTable="Places" />
      <msdata:Relationship name="FK_Concert_Artist" msdata:parent="Artists" msdata:child="Concerts" msdata:parentkey="Artist_ID" msdata:childkey="Concert_Artist_ID" msprop:Generator_UserChildTable="Concerts" msprop:Generator_ChildPropName="GetConcertsRows" msprop:Generator_UserRelationName="FK_Concert_Artist" msprop:Generator_RelationVarName="relationFK_Concert_Artist" msprop:Generator_UserParentTable="Artists" msprop:Generator_ParentPropName="ArtistsRow" />
      <msdata:Relationship name="FK_Seat_Sector1" msdata:parent="Sectors" msdata:child="Seats" msdata:parentkey="Sector_ID" msdata:childkey="Seat_Sector_ID" msprop:Generator_UserChildTable="Seats" msprop:Generator_ChildPropName="GetSeatsRows" msprop:Generator_UserRelationName="FK_Seat_Sector1" msprop:Generator_RelationVarName="relationFK_Seat_Sector1" msprop:Generator_UserParentTable="Sectors" msprop:Generator_ParentPropName="SectorsRow" />
      <msdata:Relationship name="FK_Sector_Place" msdata:parent="Places" msdata:child="Sectors" msdata:parentkey="Place_ID" msdata:childkey="Sector_Place_ID" msprop:Generator_UserChildTable="Sectors" msprop:Generator_ChildPropName="GetSectorsRows" msprop:Generator_UserRelationName="FK_Sector_Place" msprop:Generator_ParentPropName="PlacesRow" msprop:Generator_RelationVarName="relationFK_Sector_Place" msprop:Generator_UserParentTable="Places" />
      <msdata:Relationship name="FK_Ticket_Concert" msdata:parent="Concerts" msdata:child="Tickets" msdata:parentkey="Concert_ID" msdata:childkey="Ticket_Concert_ID" msprop:Generator_UserChildTable="Tickets" msprop:Generator_ChildPropName="GetTicketsRows" msprop:Generator_UserRelationName="FK_Ticket_Concert" msprop:Generator_ParentPropName="ConcertsRow" msprop:Generator_RelationVarName="relationFK_Ticket_Concert" msprop:Generator_UserParentTable="Concerts" />
      <msdata:Relationship name="FK_Ticket_Seat" msdata:parent="Seats" msdata:child="Tickets" msdata:parentkey="Seat_ID" msdata:childkey="Ticket_Seat_ID" msprop:Generator_UserChildTable="Tickets" msprop:Generator_ChildPropName="GetTicketsRows" msprop:Generator_UserRelationName="FK_Ticket_Seat" msprop:Generator_ParentPropName="SeatsRow" msprop:Generator_RelationVarName="relationFK_Ticket_Seat" msprop:Generator_UserParentTable="Seats" />
      <msdata:Relationship name="FK_Tickets_Ticket_States" msdata:parent="Ticket_States" msdata:child="Tickets" msdata:parentkey="State_ID" msdata:childkey="Ticket_State_ID" msprop:Generator_UserChildTable="Tickets" msprop:Generator_ChildPropName="GetTicketsRows" msprop:Generator_UserRelationName="FK_Tickets_Ticket_States" msprop:Generator_ParentPropName="Ticket_StatesRow" msprop:Generator_RelationVarName="relationFK_Tickets_Ticket_States" msprop:Generator_UserParentTable="Ticket_States" />
      <msdata:Relationship name="FK_Concert_Artist1" msdata:parent="ArtistsByCategory" msdata:child="Concerts" msdata:parentkey="Artist_ID" msdata:childkey="Concert_Artist_ID" msprop:Generator_UserChildTable="Concerts" msprop:Generator_ChildPropName="GetConcertsRows" msprop:Generator_UserRelationName="FK_Concert_Artist1" msprop:Generator_RelationVarName="relationFK_Concert_Artist1" msprop:Generator_UserParentTable="ArtistsByCategory" msprop:Generator_ParentPropName="ArtistsByCategoryRow" />
      <msdata:Relationship name="FK_Concert_Artist2" msdata:parent="ArtistsByGenre" msdata:child="Concerts" msdata:parentkey="Artist_ID" msdata:childkey="Concert_Artist_ID" msprop:Generator_UserChildTable="Concerts" msprop:Generator_ChildPropName="GetConcertsRows" msprop:Generator_UserRelationName="FK_Concert_Artist2" msprop:Generator_ParentPropName="ArtistsByGenreRow" msprop:Generator_RelationVarName="relationFK_Concert_Artist2" msprop:Generator_UserParentTable="ArtistsByGenre" />
      <msdata:Relationship name="FK_Ticket_Concert1" msdata:parent="NotConcerts" msdata:child="Tickets" msdata:parentkey="Concert_ID" msdata:childkey="Ticket_Concert_ID" msprop:Generator_UserChildTable="Tickets" msprop:Generator_ChildPropName="GetTicketsRows" msprop:Generator_UserRelationName="FK_Ticket_Concert1" msprop:Generator_ParentPropName="NotConcertsRow" msprop:Generator_RelationVarName="relationFK_Ticket_Concert1" msprop:Generator_UserParentTable="NotConcerts" />
      <msdata:Relationship name="FK_Concert_Artist3" msdata:parent="Artists" msdata:child="NotConcerts" msdata:parentkey="Artist_ID" msdata:childkey="Concert_Artist_ID" msprop:Generator_UserChildTable="NotConcerts" msprop:Generator_ChildPropName="GetNotConcertsRows" msprop:Generator_UserRelationName="FK_Concert_Artist3" msprop:Generator_RelationVarName="relationFK_Concert_Artist3" msprop:Generator_UserParentTable="Artists" msprop:Generator_ParentPropName="ArtistsRow" />
      <msdata:Relationship name="FK_Concert_Artist4" msdata:parent="ArtistsByGenre" msdata:child="NotConcerts" msdata:parentkey="Artist_ID" msdata:childkey="Concert_Artist_ID" msprop:Generator_UserChildTable="NotConcerts" msprop:Generator_ChildPropName="GetNotConcertsRows" msprop:Generator_UserRelationName="FK_Concert_Artist4" msprop:Generator_RelationVarName="relationFK_Concert_Artist4" msprop:Generator_UserParentTable="ArtistsByGenre" msprop:Generator_ParentPropName="ArtistsByGenreRow" />
      <msdata:Relationship name="FK_Concerts_Places1" msdata:parent="Places" msdata:child="NotConcerts" msdata:parentkey="Place_ID" msdata:childkey="Concert_Place_ID" msprop:Generator_UserChildTable="NotConcerts" msprop:Generator_ChildPropName="GetNotConcertsRows" msprop:Generator_UserRelationName="FK_Concerts_Places1" msprop:Generator_RelationVarName="relationFK_Concerts_Places1" msprop:Generator_UserParentTable="Places" msprop:Generator_ParentPropName="PlacesRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>